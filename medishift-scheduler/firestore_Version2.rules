rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        (request.auth.token.admin == true ||
         exists(/databases/$(database)/documents/admins/$(request.auth.uid)));
    }
    
    function isResident(residentId) {
      return isAuthenticated() && request.auth.uid == residentId;
    }
    
    function isResidentOrAdmin(residentId) {
      return isResident(residentId) || isAdmin();
    }

    // ===== RESIDENTS =====
    match /residents/{residentId} {
      allow read: if isResidentOrAdmin(residentId);
      allow write: if isAdmin();
      allow update: if isResident(residentId) && 
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['phone', 'email', 'preferences']);
    }

    // ===== CONFIGURATION =====
    match /configuration/{docId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // ===== SCHEDULES =====
    match /academicYears/{yearId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    match /monthlySchedules/{monthId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    match /weeklySchedules/{weekId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // ===== LEAVE REQUESTS =====
    match /leaveRequests/{requestId} {
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.residentId &&
        request.resource.data.status == 'Pending Analysis';
      allow read: if isResidentOrAdmin(resource.data.residentId);
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // ===== LEAVE ANALYSIS REPORTS =====
    match /leaveAnalysisReports/{reportId} {
      allow read: if isAdmin();
      allow write: if false; // Only backend functions
    }
    
    // ===== CONFLICT TICKETS =====
    match /conflictTickets/{ticketId} {
      allow read: if isAdmin() || 
        isResident(resource.data.residentId);
      allow write: if isAdmin();
    }
    
    // ===== EPAs =====
    match /epas/{epaId} {
      allow read: if isResidentOrAdmin(resource.data.residentId) ||
        request.auth.uid == resource.data.assessorId;
      allow create: if isAdmin();
      allow update: if isAdmin() || 
        (request.auth.uid == resource.data.assessorId &&
         request.resource.data.diff(resource.data).affectedKeys()
           .hasOnly(['status', 'feedback', 'score', 'completedAt']));
    }
    
    // ===== NOTIFICATIONS =====
    match /notifications/{notificationId} {
      allow read: if isResident(resource.data.recipientId);
      allow update: if isResident(resource.data.recipientId) &&
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['isRead', 'readAt']);
      allow delete: if isResident(resource.data.recipientId);
      allow create: if false; // Only backend
    }
    
    // ===== ANALYTICS REPORTS =====
    match /analyticsReports/{reportId} {
      allow read: if isAdmin();
      allow write: if false; // Only backend
    }
    
    // ===== OR CASES =====
    match /orCases/{caseId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
  }
}